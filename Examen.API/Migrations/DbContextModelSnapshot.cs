// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Examen.API.Migrations
{
    [DbContext(typeof(DbContext))]
    partial class DbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Examen.Entidades.Anime", b =>
                {
                    b.Property<int>("AnimeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AnimeID"));

                    b.Property<DateTime>("FechaEstreno")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreAnime")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AnimeID");

                    b.ToTable("Anime");
                });

            modelBuilder.Entity("Examen.Entidades.Tipo", b =>
                {
                    b.Property<int>("TipoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipoID"));

                    b.Property<int>("AnimeID")
                        .HasColumnType("int");

                    b.Property<string>("NombreTipo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoAudiencia")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TipoID");

                    b.HasIndex("AnimeID");

                    b.ToTable("Tipo");
                });

            modelBuilder.Entity("Examen.Entidades.Tipo", b =>
                {
                    b.HasOne("Examen.Entidades.Anime", "Anime")
                        .WithMany("Tipo")
                        .HasForeignKey("AnimeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Anime");
                });

            modelBuilder.Entity("Examen.Entidades.Anime", b =>
                {
                    b.Navigation("Tipo");
                });
#pragma warning restore 612, 618
        }
    }
}
